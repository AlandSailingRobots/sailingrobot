#######################################################
#
#    Aland Sailing Robot
#    ===========================================
#    testsuit
#    -------------------------------------------
#
#	The top level makefile will export the following:
#		CXX: The C++ compiler to use
#		CC: THe C compiler to use
#		CPPFLAGS: C++ compiler flags
#		CFLAGS: C compiler flags
#		OBJECT_FILE: Path to the objects file containing all the boats objects
#
#######################################################



#######################################################
# Files
#######################################################

TEST_SUITE = ./testsuite.run
UNIT_TEST = ./unit-tests.run

INT_TEST_FOLDER = ./tests/integration/IntegrationTests

TEST_SUITE_FOLDER = ./tests/testsuite

TEST_SUITES = 	main.cpp testCourseCalculation.cpp testCV7.cpp testSailCommand.cpp \
				testRudderCommand.cpp testUtility.cpp testExternalCommand.cpp \
				testPosition.cpp testSystemState.cpp testxBee.cpp testThreadRAII.cpp \
				testCourseMath.cpp testWaypointRouting.cpp testWindVaneController.cpp


INT_TEST_CV7 = CV7IntegrationTest.cpp
INT_TEST_COMPASS = CompassIntegrationTest.cpp
INT_TEST_GPS = gpsIntegrationTest.cpp
INT_TEST_ANALOG_ARDUINO = AnalogArduinoIntegrationTest.cpp
INT_TEST_HTTPSYNC = HTTPSyncIntegrationTest.cpp
INT_TEST_SERVOCONTROLLER = ServocontrollerIntegrationTest.cpp
INT_TEST_XBEE = XBeeIntegrationTest.cpp
INT_TEST_XBEESYNC = XBeeSyncIntegrationTest.cpp


INT_TESTS = $(INT_TEST_CV7) $(INT_TEST_COMPASS) $(INT_TEST_GPS) $(INT_TEST_ANALOG_ARDUINO) \
		$(INT_TEST_HTTPSYNC) $(INT_TEST_SERVOCONTROLLER) $(INT_TEST_XBEE) $(INT_TEST_XBEESYNC)




INT_TEST_LIST = $(addprefix $(INT_TEST_FOLDER)/, $(INT_TESTS))
TEST_SUITES_LIST = $(addprefix $(TEST_SUITE_FOLDER)/, $(TEST_SUITES))

INTEGRATION_TESTS = $(addprefix $(INT_TEST_FOLDER)/output/, $(INT_TESTS:.cpp=.run))


#######################################################
# Rules
#######################################################


.PHONY: clean $(UNIT_TEST)

all: $(UNIT_TEST)

$(TEST_SUITE):
	@echo Building test suite ... this may take awhile
	@$(CXX) $(CPPFLAGS) $(INC) -o ./$@ $(TEST_SUITES_LIST) @$(OBJECT_FILE) $(LIBS) $(LIBS_BOOST)
	@echo Done building test suite

# Compile CPP files into the build folder
$(INT_TEST_FOLDER)/output/%.run:$(INT_TEST_FOLDER)/%.cpp
	@mkdir -p $(dir $@)
	@echo Building test $@
	@$(CXX) $(CPPFLAGS) $(INC) -o ./$@ $< @$(OBJECT_FILE) $(LIBS) $(LIBS_BOOST)

$(UNIT_TEST):
	$(MAKE) -C libs/cxxtest
	$(CXX) $(CPPFLAGS) libs/cxxtest/runner.o @$(OBJECT_FILE) -Wl,-rpath=./ ./libwiringPi.so -o $(UNIT_TEST) $(LIBS)

clean:
	@rm -f $(INTEGRATION_TESTS)
	@rm -f $(TEST_SUITE)
